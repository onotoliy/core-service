/*
 * This file is generated by jOOQ.
 */
package io.github.onotoliy.core.jooq.tables.records;


import io.github.onotoliy.core.jooq.tables.CoreDeviceException;

import java.time.LocalDateTime;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Описание ошибки устройства
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreDeviceExceptionRecord extends UpdatableRecordImpl<CoreDeviceExceptionRecord> implements Record10<UUID, String, UUID, LocalDateTime, LocalDateTime, String, String, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>CORE_DEVICE_EXCEPTION.GUID</code>. Уникальный идентификатор
     */
    public void setGuid(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>CORE_DEVICE_EXCEPTION.GUID</code>. Уникальный идентификатор
     */
    public UUID getGuid() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>CORE_DEVICE_EXCEPTION.NAME</code>. Название
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>CORE_DEVICE_EXCEPTION.NAME</code>. Название
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>CORE_DEVICE_EXCEPTION.AUTHOR</code>. Автор
     */
    public void setAuthor(UUID value) {
        set(2, value);
    }

    /**
     * Getter for <code>CORE_DEVICE_EXCEPTION.AUTHOR</code>. Автор
     */
    public UUID getAuthor() {
        return (UUID) get(2);
    }

    /**
     * Setter for <code>CORE_DEVICE_EXCEPTION.CREATION_DATE</code>. Дата создания
     */
    public void setCreationDate(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>CORE_DEVICE_EXCEPTION.CREATION_DATE</code>. Дата создания
     */
    public LocalDateTime getCreationDate() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>CORE_DEVICE_EXCEPTION.DELETION_DATE</code>. Дата удаления
     */
    public void setDeletionDate(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>CORE_DEVICE_EXCEPTION.DELETION_DATE</code>. Дата удаления
     */
    public LocalDateTime getDeletionDate() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>CORE_DEVICE_EXCEPTION.DEVICE</code>. Устройство
     */
    public void setDevice(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>CORE_DEVICE_EXCEPTION.DEVICE</code>. Устройство
     */
    public String getDevice() {
        return (String) get(5);
    }

    /**
     * Setter for <code>CORE_DEVICE_EXCEPTION.AGENT</code>. Агент
     */
    public void setAgent(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>CORE_DEVICE_EXCEPTION.AGENT</code>. Агент
     */
    public String getAgent() {
        return (String) get(6);
    }

    /**
     * Setter for <code>CORE_DEVICE_EXCEPTION.MESSAGE</code>. Сообщение об ошибки
     */
    public void setMessage(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>CORE_DEVICE_EXCEPTION.MESSAGE</code>. Сообщение об ошибки
     */
    public String getMessage() {
        return (String) get(7);
    }

    /**
     * Setter for <code>CORE_DEVICE_EXCEPTION.LOCALIZED_MESSAGE</code>. Локализированое сообщение об ошибки
     */
    public void setLocalizedMessage(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>CORE_DEVICE_EXCEPTION.LOCALIZED_MESSAGE</code>. Локализированое сообщение об ошибки
     */
    public String getLocalizedMessage() {
        return (String) get(8);
    }

    /**
     * Setter for <code>CORE_DEVICE_EXCEPTION.STACK_TRACE</code>. StackTrace
     */
    public void setStackTrace(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>CORE_DEVICE_EXCEPTION.STACK_TRACE</code>. StackTrace
     */
    public String getStackTrace() {
        return (String) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row10<UUID, String, UUID, LocalDateTime, LocalDateTime, String, String, String, String, String> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    @Override
    public Row10<UUID, String, UUID, LocalDateTime, LocalDateTime, String, String, String, String, String> valuesRow() {
        return (Row10) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return CoreDeviceException.CORE_DEVICE_EXCEPTION.GUID;
    }

    @Override
    public Field<String> field2() {
        return CoreDeviceException.CORE_DEVICE_EXCEPTION.NAME;
    }

    @Override
    public Field<UUID> field3() {
        return CoreDeviceException.CORE_DEVICE_EXCEPTION.AUTHOR;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return CoreDeviceException.CORE_DEVICE_EXCEPTION.CREATION_DATE;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return CoreDeviceException.CORE_DEVICE_EXCEPTION.DELETION_DATE;
    }

    @Override
    public Field<String> field6() {
        return CoreDeviceException.CORE_DEVICE_EXCEPTION.DEVICE;
    }

    @Override
    public Field<String> field7() {
        return CoreDeviceException.CORE_DEVICE_EXCEPTION.AGENT;
    }

    @Override
    public Field<String> field8() {
        return CoreDeviceException.CORE_DEVICE_EXCEPTION.MESSAGE;
    }

    @Override
    public Field<String> field9() {
        return CoreDeviceException.CORE_DEVICE_EXCEPTION.LOCALIZED_MESSAGE;
    }

    @Override
    public Field<String> field10() {
        return CoreDeviceException.CORE_DEVICE_EXCEPTION.STACK_TRACE;
    }

    @Override
    public UUID component1() {
        return getGuid();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public UUID component3() {
        return getAuthor();
    }

    @Override
    public LocalDateTime component4() {
        return getCreationDate();
    }

    @Override
    public LocalDateTime component5() {
        return getDeletionDate();
    }

    @Override
    public String component6() {
        return getDevice();
    }

    @Override
    public String component7() {
        return getAgent();
    }

    @Override
    public String component8() {
        return getMessage();
    }

    @Override
    public String component9() {
        return getLocalizedMessage();
    }

    @Override
    public String component10() {
        return getStackTrace();
    }

    @Override
    public UUID value1() {
        return getGuid();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public UUID value3() {
        return getAuthor();
    }

    @Override
    public LocalDateTime value4() {
        return getCreationDate();
    }

    @Override
    public LocalDateTime value5() {
        return getDeletionDate();
    }

    @Override
    public String value6() {
        return getDevice();
    }

    @Override
    public String value7() {
        return getAgent();
    }

    @Override
    public String value8() {
        return getMessage();
    }

    @Override
    public String value9() {
        return getLocalizedMessage();
    }

    @Override
    public String value10() {
        return getStackTrace();
    }

    @Override
    public CoreDeviceExceptionRecord value1(UUID value) {
        setGuid(value);
        return this;
    }

    @Override
    public CoreDeviceExceptionRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public CoreDeviceExceptionRecord value3(UUID value) {
        setAuthor(value);
        return this;
    }

    @Override
    public CoreDeviceExceptionRecord value4(LocalDateTime value) {
        setCreationDate(value);
        return this;
    }

    @Override
    public CoreDeviceExceptionRecord value5(LocalDateTime value) {
        setDeletionDate(value);
        return this;
    }

    @Override
    public CoreDeviceExceptionRecord value6(String value) {
        setDevice(value);
        return this;
    }

    @Override
    public CoreDeviceExceptionRecord value7(String value) {
        setAgent(value);
        return this;
    }

    @Override
    public CoreDeviceExceptionRecord value8(String value) {
        setMessage(value);
        return this;
    }

    @Override
    public CoreDeviceExceptionRecord value9(String value) {
        setLocalizedMessage(value);
        return this;
    }

    @Override
    public CoreDeviceExceptionRecord value10(String value) {
        setStackTrace(value);
        return this;
    }

    @Override
    public CoreDeviceExceptionRecord values(UUID value1, String value2, UUID value3, LocalDateTime value4, LocalDateTime value5, String value6, String value7, String value8, String value9, String value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CoreDeviceExceptionRecord
     */
    public CoreDeviceExceptionRecord() {
        super(CoreDeviceException.CORE_DEVICE_EXCEPTION);
    }

    /**
     * Create a detached, initialised CoreDeviceExceptionRecord
     */
    public CoreDeviceExceptionRecord(UUID guid, String name, UUID author, LocalDateTime creationDate, LocalDateTime deletionDate, String device, String agent, String message, String localizedMessage, String stackTrace) {
        super(CoreDeviceException.CORE_DEVICE_EXCEPTION);

        setGuid(guid);
        setName(name);
        setAuthor(author);
        setCreationDate(creationDate);
        setDeletionDate(deletionDate);
        setDevice(device);
        setAgent(agent);
        setMessage(message);
        setLocalizedMessage(localizedMessage);
        setStackTrace(stackTrace);
    }
}
